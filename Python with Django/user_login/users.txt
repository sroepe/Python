sroep@LAPTOP-SLNL6L71 MINGW64 ~/Desktop/School/Python/Django/user_login
$ python manage.py shell
Python 2.7.13 (v2.7.13:a06454b1afa1, Dec 17 2016, 20:42:59) [MSC v.1500 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> user.objects.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'user' is not defined
>>> user_login_app_user.objects.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'user_login_app_user' is not defined
>>> from apps.user_login_app.models import user
>>> user.objects.all()
<QuerySet []>
>>> user.objects.create(first_name="Sara", last_name="Roepe", email_address="sr@sr.com", age="22")
<user: user object>
>>> user.objects.create(first_name="Ziggy", last_name="Roepe", email_address="ziggy@cat.com", age="12")
<user: user object>
>>> user.objects.create(first_name="Bella", last_name="Roepe", email_address="bella@gmail.com", age="7")
<user: user object>
>>> user.objects.create(first_name="Jak", last_name="Roepe", email_address="jak@dog.com", age="9")
<user: user object>
>>> user.objects.all()
<QuerySet [<user: user object>, <user: user object>, <user: user object>, <user: user object>]>
>>> user.objects.first()
<user: user object>
>>> user.objects.first(all)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
TypeError: first() takes exactly 1 argument (2 given)
>>> user.objects.first().name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'user' object has no attribute 'name'
>>> user.objects.first().first_name
u'Sara'
>>> user.objects.first().all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'user' object has no attribute 'all'
>>> user.objects.all().values()
<QuerySet [{'first_name': u'Sara', 'last_name': u'Roepe', 'created_at': datetime.datetime(2017, 11, 14, 21, 44, 31, 50000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2017, 11, 14, 21, 44,
31, 50000, tzinfo=<UTC>), u'id': 1, 'email_address': u'sr@sr.com', 'age': 22}, {'first_name': u'Ziggy', 'last_name': u'Roepe', 'created_at': datetime.datetime(2017, 11, 14, 21, 45, 24, 917000,
 tzinfo=<UTC>), 'updated_at': datetime.datetime(2017, 11, 14, 21, 45, 24, 917000, tzinfo=<UTC>), u'id': 2, 'email_address': u'ziggy@cat.com', 'age': 12}, {'first_name': u'Bella', 'last_name':
u'Roepe', 'created_at': datetime.datetime(2017, 11, 14, 21, 45, 58, 587000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2017, 11, 14, 21, 45, 58, 587000, tzinfo=<UTC>), u'id': 3, 'email_add
ress': u'bella@gmail.com', 'age': 7}, {'first_name': u'Jak', 'last_name': u'Roepe', 'created_at': datetime.datetime(2017, 11, 14, 21, 46, 32, 715000, tzinfo=<UTC>), 'updated_at': datetime.date
time(2017, 11, 14, 21, 46, 32, 715000, tzinfo=<UTC>), u'id': 4, 'email_address': u'jak@dog.com', 'age': 9}]>
>>> user.objects.last()
<user: user object>
>>> user.objects.last().first_name.age
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'unicode' object has no attribute 'age'
>>> user.objects.last().first_name
u'Jak'
>>> user.objects.last().age
9
>>> user.objects.last().values()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'user' object has no attribute 'values'
>>> user.objects.last().value()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'user' object has no attribute 'value'
>>> user.objects.get(id=1)
<user: user object>
>>> user.objects.get(id=1).values()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'user' object has no attribute 'values'
>>> user.objects.filter(id=1).values()
<QuerySet [{'first_name': u'Sara', 'last_name': u'Roepe', 'created_at': datetime.datetime(2017, 11, 14, 21, 44, 31, 50000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2017, 11, 14, 21, 44,
31, 50000, tzinfo=<UTC>), u'id': 1, 'email_address': u'sr@sr.com', 'age': 22}]>
>>> user.objects.filter().last()
<user: user object>
>>> user.objects.filter().last().values()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'user' object has no attribute 'values'
>>> user.objects.order_by("first_name").desc()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'desc'
>>> user.objects.order_by("first_name").desc
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'desc'
>>> user.objects.order_by('first_name').desc()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'desc'
>>> user.objects.order_by('first_name')
<QuerySet [<user: user object>, <user: user object>, <user: user object>, <user: user object>]>
>>> user.objects.order_by('first_name').desc()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'desc'
>>> user.objects.order_by().desc('first_name')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'desc'
>>> user.objects.all().order_by('first_name').desc()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'desc'
>>> user.objects.order_by(-"first_name")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: bad operand type for unary -: 'str'
>>> user.objects.order_by("-first_name")
<QuerySet [<user: user object>, <user: user object>, <user: user object>, <user: user object>]>
>>> user.objects.order_by("-first_name").values()
<QuerySet [{'first_name': u'Ziggy', 'last_name': u'Roepe', 'created_at': datetime.datetime(2017, 11, 14, 21, 45, 24, 917000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2017, 11, 14, 21, 45
, 24, 917000, tzinfo=<UTC>), u'id': 2, 'email_address': u'ziggy@cat.com', 'age': 12}, {'first_name': u'Sara', 'last_name': u'Roepe', 'created_at': datetime.datetime(2017, 11, 14, 21, 44, 31, 5
0000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2017, 11, 14, 21, 44, 31, 50000, tzinfo=<UTC>), u'id': 1, 'email_address': u'sr@sr.com', 'age': 22}, {'first_name': u'Jak', 'last_name': u'
Roepe', 'created_at': datetime.datetime(2017, 11, 14, 21, 46, 32, 715000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2017, 11, 14, 21, 46, 32, 715000, tzinfo=<UTC>), u'id': 4, 'email_addre
ss': u'jak@dog.com', 'age': 9}, {'first_name': u'Bella', 'last_name': u'Roepe', 'created_at': datetime.datetime(2017, 11, 14, 21, 45, 58, 587000, tzinfo=<UTC>), 'updated_at': datetime.datetime
(2017, 11, 14, 21, 45, 58, 587000, tzinfo=<UTC>), u'id': 3, 'email_address': u'bella@gmail.com', 'age': 7}]>
>>> user.objects.get('-first_name')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\query.py", line 371, in get
    clone = self.filter(*args, **kwargs)
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\query.py", line 784, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\query.py", line 802, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\sql\query.py", line 1250, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\sql\query.py", line 1276, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\sql\query.py", line 1151, in build_filter
    arg, value = filter_expr
ValueError: too many values to unpack
>>> user.objects.get('first_name')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\query.py", line 371, in get
    clone = self.filter(*args, **kwargs)
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\query.py", line 784, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\query.py", line 802, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\sql\query.py", line 1250, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\sql\query.py", line 1276, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\sroep\Desktop\School\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\sql\query.py", line 1151, in build_filter
    arg, value = filter_expr
ValueError: too many values to unpack
>>> user.objects.all('first_name')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: all() takes exactly 1 argument (2 given)
>>> user.objects.all().values('first_name')
<QuerySet [{'first_name': u'Sara'}, {'first_name': u'Ziggy'}, {'first_name': u'Bella'}, {'first_name': u'Jak'}]>
>>> user.objects.all().values('first_name').order_by('-first_name')
<QuerySet [{'first_name': u'Ziggy'}, {'first_name': u'Sara'}, {'first_name': u'Jak'}, {'first_name': u'Bella'}]>
>>> user.objects.get(id=3)

KeyboardInterrupt
>>> user.objects.all().values('id')
<QuerySet [{'id': 1}, {'id': 2}, {'id': 3}, {'id': 4}]>
>>> user.objects.get(id=3)
<user: user object>
>>> u=user.objects.get(id=3)
>>> u.last_name="Hoffmann"
>>> u.save()
>>> user.objects.get(id=3).values("last_name")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'user' object has no attribute 'values'
>>> user.objects.filter(id=3).values()
<QuerySet [{'first_name': u'Bella', 'last_name': u'Hoffmann', 'created_at': datetime.datetime(2017, 11, 14, 21, 45, 58, 587000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2017, 11, 14, 22,
 20, 45, 650000, tzinfo=<UTC>), u'id': 3, 'email_address': u'bella@gmail.com', 'age': 7}]>
>>> u=user.objects.get(id=4)
>>> u.delete()
(1, {u'user_login_app.user': 1})
>>> user.objects.all()
<QuerySet [<user: user object>, <user: user object>, <user: user object>]>
